# SWEA 1218 괄호 짝짓기
for t in range(1, 11):
    N = int(input())
    # 테스트 케이스의 길이를 입력받는다.
    str = input()
    # 문자열을 입력받는다.

    dict = {
        '(' : 1, '[' : 2, '{' : 3, '<' : 4,
        ')' : -1, ']' : -2, '}' : -3, '>' : -4}
    # 딕셔너리를 생성해 위와 같이 여는 괄호와 닫는 괄호를 각각 양수와 음수로 저장한다. 

    total = 0
    # 문자열의 유효성을 판단하기 위해 total이라는 변수를 만들고 0을 저장한다.

    for i in str:
        total += dict[i]
        # 문자열의 한 글자씩 불러오며 해당 값을 total에 더한다.

        if total < 0:
            print(f'#{t} 0')
            break
        # total이 음수인 경우 닫는 괄호가 먼저 나왔다는 의미이므로 유효하지 않은 문자열이므로 0을 출력하고 반복문을 멈춘다.
    else:
        if total == 0:
            print(f'#{t} 1')
        # 모든 반복이 끝났을 때 total 값이 0이라는 것은 여는 괄호와 닫는 괄호의 수가 동일한 유효한 문자열이라는 의미이므로 1을 출력한다.
        else:
            print(f'#{t} 0')
        # total 값이 1 이상으로 남아있는 경우 여는 괄호가 남아있다는 의미이므로 유효하지 않은 문자열이다. 따라서 0을 출력한다.